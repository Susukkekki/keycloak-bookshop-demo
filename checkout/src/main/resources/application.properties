server.port=8084

app.registration.name=app
client.registration.name=client
keycloak.auth-server-url=http://keycloak:8080/realms/bookshop
keycloak.client-id=checkout
keycloak.client-secret=48d6698a-c787-427b-9aa3-80a3078d4568

spring.security.oauth2.client.registration.app.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.app.redirect-uri=http://localhost:8084/login/oauth2/code/app
spring.security.oauth2.client.registration.app.client-id=${keycloak.client-id}
spring.security.oauth2.client.registration.app.client-secret=${keycloak.client-secret}
spring.security.oauth2.client.registration.app.scope=openid
spring.security.oauth2.client.registration.app.provider=app
#spring.security.oauth2.client.provider.app.issuer-uri=${keycloak.auth-server-url}
spring.security.oauth2.client.provider.app.authorization-uri=http://localhost:8080/realms/bookshop/protocol/openid-connect/auth
spring.security.oauth2.client.provider.app.token-uri=${keycloak.auth-server-url}/protocol/openid-connect/token
spring.security.oauth2.client.provider.app.jwk-set-uri=${keycloak.auth-server-url}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.app.user-info-uri=${keycloak.auth-server-url}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.app.user-name-attribute=preferred_username

spring.security.oauth2.client.registration.client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.client.client-id=${keycloak.client-id}
spring.security.oauth2.client.registration.client.client-secret=${keycloak.client-secret}
spring.security.oauth2.client.registration.client.provider=client
#spring.security.oauth2.client.provider.client.issuer-uri=${keycloak.auth-server-url}
spring.security.oauth2.client.provider.client.token-uri=${keycloak.auth-server-url}/protocol/openid-connect/token
